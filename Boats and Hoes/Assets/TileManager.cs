// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Xml;

namespace Game
{
	public class TileManager
	{
		List<Tile> m_gameTiles;

		public TileManager ()
		{
			XmlDocument xml = XMLReader.Read ("Tiles");
			int tileID = 0;
			// Tiles
			foreach(XmlNode tileNode in xml.DocumentElement.ChildNodes)
			{
				List<Edge> edges = new List<Edge>((int)Edge.EdgeType.MAX_EDGES-1);

				// Edges
				foreach(XmlNode edgeNode in tileNode)
				{
					Edge edge = new Edge();

					int segIdx = 0;
					foreach(XmlNode segNode in edgeNode)
					{
						Feature.FeatureType featureType = (Feature.FeatureType)Enum.Parse(typeof(Feature.FeatureType), segNode.Attributes["feature"].InnerText);
						int featureID = int.Parse(segNode.Attributes["id"].InnerText);
						Segment seg = new Segment(featureType, featureID);
						edge.SetSegment(segIdx++, seg);
					}
					edges.Add(edge);
				}

				m_gameTiles.Add (new Tile(tileID++, edges));
			}
		}
	}
}

